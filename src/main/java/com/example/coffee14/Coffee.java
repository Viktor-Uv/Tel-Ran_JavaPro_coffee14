package com.example.coffee14;

import jakarta.persistence.*;
import lombok.*;

import java.math.BigDecimal;
import java.util.UUID;

@Entity // экземпляры этого класса могу прозрачно сохраняться и подниматься из базы данных
// @Table(name = "coffees")// по-умолчанию таблица базы данных будет называться как класс
@Getter // автоматически сгенерируются геттеры
@Setter // и сеттеры
// @NoArgsConstructor // генерация конструктора по-умолчанию
// @AllArgsConstructor // генерация конструктора со всеми параметрами
@ToString // генерация toString по-умолчанию
public class Coffee {
    @Id // у сущности всегда должен быть первичный ключ
    private String id;
    // @Column(name = "coffeename") // если не устраивает название поля в качестве колонки
    private String name;

    // @Transient // поле не будет сохраняться в таблицу базы данных
    private BigDecimal price;

    public Coffee() {
        id = UUID.randomUUID().toString();
    }

    public Coffee(String name, BigDecimal price) {
        this();
        this.name = name;
        this.price = price;
    }

    /* // the methods below will be automatically generated by the annotations @Getter & @Setter:
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public BigDecimal getPrice() {
        return price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    public String getId() {
        return id;
    }
     */
}
